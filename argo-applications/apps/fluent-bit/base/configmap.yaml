apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: logging
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush         1
        Daemon        Off
        Log_Level     info
        Parsers_File  parsers.conf
        HTTP_Server   On
        HTTP_Listen   0.0.0.0
        HTTP_Port     2020

    @INCLUDE input-kubernetes.conf
    @INCLUDE filter-kubernetes.conf
    @INCLUDE output-loki.conf

  input-kubernetes.conf: |
    [INPUT]
        Name              tail
        Alias             pod-logs-tailer
        Tag               kube.*
        Path              /var/log/containers/*.log
        Parser            docker
        DB                /var/log/flb_kube.db
        Mem_Buf_Limit     20MB
        Skip_Long_Lines   On
        Refresh_Interval  1

  filter-kubernetes.conf: |
    [FILTER]
        Name                kubernetes
        Match               kube.*
        Kube_URL            https://kubernetes.default.svc:443
        Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
        Kube_Tag_Prefix     kube.var.log.containers.
        Merge_Log           On
        Merge_Log_Key       log_processed
        Keep_Log            On
        Annotations         On
        Labels              On

  output-loki.conf: |
    [OUTPUT]
        name          loki
        match  never.match.this.*
        host          192.16.0.20
        port          3100
        uri           /loki/api/v1/push
        labels        job=fluent-bit,cluster=olympus,container=$kubernetes['container_name']
        remove_keys   kubernetes,stream,time
        auto_kubernetes_labels  on
        structured_metadata      $kubernetes['pod_name'],$kubernetes['namespace_name'],$kubernetes['container_name']
        retry_limit              False
        compress                 gzip
        tenant_id               ""
        line_format              json
        drop_single_key          true
    [OUTPUT]
        name          stdout
        match         *
        format        json_lines

  parsers.conf: |
    [PARSER]
        Name        docker
        Format      json
        Time_Key    time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep   On
